<Styles 
  xmlns="https://github.com/avaloniaui"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
>
	<Design.PreviewWith>
		<Border Padding="20" Width="300" Background="{DynamicResource PrimaryBackgroundGradient}">
			<StackPanel Spacing="15">

        <Button Content="Home" />
        <Button Classes="small" Content="Small" />
        <Button Classes="subtle" Content="Home" />
        <Button Classes="outline" Content="Home" />
        <Button Classes="alert" Content="Home" />

				<!-- <Button>
					<Label Classes="akko">Home</Label>
				</Button>
				<Button HorizontalAlignment="Stretch">
					<Label Classes="akko">Home</Label>
				</Button>
				<Button HorizontalAlignment="Stretch">
					<StackPanel Orientation="Horizontal">
						<Label Classes="icon">&#xe2c2;</Label>
						<Label Classes="akko">Home</Label>
					</StackPanel>
				</Button> -->

        <!-- <Button>Home</Button> -->
        <!-- <Button FontFamily="{DynamicResource AkkoPro}">Home</Button> -->
        <IconButton IconText="&#xe2c2;" Content="Home" HorizontalAlignment="Stretch"/>

				<Button>
					<Label Classes="icon-only" >&#xe272;</Label>
				</Button>
				<Button Classes="subtle transparent">
					<Label Classes="icon-only" >&#xe272;</Label>
				</Button>

			</StackPanel>
		</Border>
	</Design.PreviewWith>

	<Style Selector="Window">
		<!-- <Setter Property="FontFamily" Value="{DynamicResource AkkoPro}"/> -->
		<Setter Property="FontFamily" Value="{DynamicResource Nunito}"/>
	</Style>

  <Style Selector="Label.h2">
    <Setter Property="Padding" Value="0 0 0 0" />
    <Setter Property="FontWeight" Value="Black" />
    <Setter Property="FontSize" Value="20" />
  </Style>

	<Style Selector="Border">
		<Setter Property="Transitions">
			<Transitions>
				<DoubleTransition Property="Width" Duration="0:0:1" />
			</Transitions>
		</Setter>
	</Style>


	<Style Selector="Label.icon, Label.icon-only">
		<Setter Property="FontFamily" Value="{DynamicResource PhosphorFill}"/>
		<Setter Property="FontSize" Value="19"/>
		<Setter Property="Padding" Value="0.5 2.0 0.6 3.5"/>
		<Setter Property="Margin" Value="0 0 5 0 "/>
	</Style>

	<Style Selector="Label.icon-only">
		<Setter Property="Padding" Value="0.50 2.0 -1.2 3.5"/>
		<Setter Property="Margin" Value="0"/>
	</Style>

	<!-- <Style Selector=":is(Button) Label.akko">
		<Setter Property="FontFamily" Value="{DynamicResource AkkoPro}"/>
		<Setter Property="Padding" Value="0 -0.5 -0.5 1"/>
	</Style> -->

  <!-- Button Styles -->
	<Style Selector=":is(Button)">
		<Setter Property="FontSize" Value="20"/>
		<Setter Property="CornerRadius" Value="10"/>
    <Setter Property="FontWeight" Value="Bold"/>
		<Setter Property="Padding" Value="9 5.5 9.2 5.5"/>
		<!-- <Setter Property="Padding" Value="-2 -4 -0.5 -5"/> -->
		<!-- <Setter Property="Background" Value="red"/> -->
    <Setter Property="BorderThickness" Value="2"/>
	</Style>

  <!-- Small button -->
  <Style Selector=":is(Button).small">
		<Setter Property="FontSize" Value="14"/>
		<Setter Property="CornerRadius" Value="6"/>
		<Setter Property="Padding" Value="6 2 6 2"/>
	</Style>

  <!-- Normal button -->
  <Style Selector=":is(Button)">
		<Setter Property="Foreground" Value="{DynamicResource PrimaryBackground}"/>
		<Setter Property="Background" Value="{DynamicResource PrimaryButtonBackgroundGradient}"/>
	</Style>

  <!-- Normal button (hover) -->
  <Style Selector=":is(Button):pointerover /template/ ContentPresenter">
		<Setter Property="Background" Value="{DynamicResource PrimaryButtonHoverGradient}"/>
	</Style>

  <!-- Alert button -->
  <Style Selector=":is(Button).alert">
		<Setter Property="Foreground" Value="{DynamicResource PrimaryBackground}"/>
		<Setter Property="Background" Value="{DynamicResource AlertButtonBackgroundGradient}"/>
	</Style>

  <!-- Alert button (hover) -->
  <Style Selector=":is(Button).alert:pointerover /template/ ContentPresenter">
		<Setter Property="Background" Value="{DynamicResource AlertButtonHoverGradient}"/>
	</Style>

  <!-- Subtle button -->
  <Style Selector=":is(Button).subtle">
		<Setter Property="Foreground" Value="{DynamicResource PrimaryForeground}"/>
		<Setter Property="Background" Value="{DynamicResource PrimaryBackground}"/>
	</Style>

  <!-- Subtle button (hover) -->
  <Style Selector=":is(Button).subtle:pointerover /template/ ContentPresenter">
		<Setter Property="Foreground" Value="{DynamicResource PrimaryHoverForeground}"/>
		<Setter Property="Background" Value="{DynamicResource PrimaryHoverBackground}"/>
	</Style>

  <!-- Outline button -->
  <Style Selector=":is(Button).outline">
		<Setter Property="Foreground" Value="{DynamicResource OutlineButtonForeground}"/>
    <Setter Property="Background" Value="{DynamicResource PrimaryBackground}"/>
		<Setter Property="BorderBrush" Value="{DynamicResource PrimaryButtonBackgroundGradient}"/>
	</Style>

  <!-- Outline button (hover) -->
  <Style Selector=":is(Button).outline:pointerover /template/ ContentPresenter">
		<Setter Property="Foreground" Value="{DynamicResource PrimaryBackground}" />
    <Setter Property="Background" Value="{DynamicResource PrimaryButtonHoverGradient}"/>
    <Setter Property="BorderBrush" Value="{DynamicResource PrimaryButtonHoverGradient}" />
	</Style>

  <!-- Transparent button -->
  <Style Selector=":is(Button).transparent">
		<Setter Property="Background" Value="Transparent"/>
    
	</Style>

  <!-- Transparent button (hover)-->
  <Style Selector=":is(Button).transparent:pointerover /template/ ContentPresenter">
		<Setter Property="RenderTransform" Value="scale(1.3)"/>
	</Style>

	<Style Selector=":is(Button) /template/ ContentPresenter">
		<Setter Property="Transitions">
			<Transitions>
				<BrushTransition Property="Foreground" Duration="0:0:0.3"/>
				<BrushTransition Property="Background" Duration="0:0:0.3"/>
				<TransformOperationsTransition Property="RenderTransform" Duration="0:0:0.3"/>
			</Transitions>
		</Setter>
	</Style>

	<Style Selector=":is(Button).active /template/ ContentPresenter">
		<Setter Property="Background" Value="{DynamicResource PrimaryActiveBackground}"/>
	</Style>

	<Style Selector=":is(Button).transparent Label.icon-only">
		<Setter Property="FontFamily" Value="{DynamicResource Phosphor}"/>
	</Style>
</Styles>